datasets <- replicate(iteration_num, gen_data(), simplify = FALSE)
miss_mats <- lapply(datasets, function(i) itemsample(i,propupp = .5, complete_seq[p], left=1))
res <- mcmapply(recover_single, datasets, miss_mats, mc.cores=detectCores(all.tests = FALSE, logical = TRUE)-1)
results_listBridge[[p]] <- res
}
results_listBridge
#####actual code to run
complete_seq <- seq(1,0, by = -.05)
results_listMCAR <- vector("list", length  = length(complete_seq))
iteration_num <- 20
for (p in 1:length(complete_seq)){
print(paste("Estimating for missingness at", complete_seq[p]))
datasets <- replicate(iteration_num, gen_data(), simplify = FALSE)
miss_mats <- lapply(datasets, function(i) gen.unifmiss(i, complete_seq[p]))
res <- mcmapply(recover_single, datasets, miss_mats, mc.cores=detectCores(all.tests = FALSE, logical = TRUE)-1)
results_listMCAR[[p]] <- res
}
complete_seq <- seq(1,0, by = -.05)
results_listBridge <- vector("list", length  = length(complete_seq))
iteration_num <- 20
for (p in 1:length(complete_seq)){
print(paste("Estimating for missingness at", complete_seq[p]))
datasets <- replicate(iteration_num, gen_data(), simplify = FALSE)
miss_mats <- lapply(datasets, function(i) itemsample(i,propupp = .5, complete_seq[p], left=1))
res <- mcmapply(recover_single, datasets, miss_mats, mc.cores=detectCores(all.tests = FALSE, logical = TRUE)-1)
results_listBridge[[p]] <- res
}
results_listBridge
?lapply
lapply(results_listBridge, "mean")
lapply(results_listBridge,quantile, probs=c(0.95,.05), na.rm=TRUE)
MCARm <- lapply(results_listMCAR, "mean")
MCARm
MCAR_ul <- lapply(results_listMCAR,quantile, probs=c(0.95,.05), na.rm=TRUE)
MCAR_ul
results_listMCAR
results_listMCAR[[1:20]]
results_listMCAR[1]
results_listMCAR[1:20]
MCARm <- lapply(results_listMCAR[1:20], "mean")
MCAR_ul <- lapply(results_listMCAR[1:20],quantile, probs=c(0.95,.05), na.rm=TRUE)
MCARm <- c(lapply(results_listMCAR[1:20], "mean"), NA)
MCARm
MCAR_ul <- c(lapply(results_listMCAR[1:20],quantile, probs=c(0.95,.05), na.rm=TRUE), NA)
MCAR_ul
do.call(rbind, c(lapply(results_listMCAR[1:20], "mean"), NA))
MCAR_ul <- do.call(rbind, c(lapply(results_listMCAR[1:20],quantile, probs=c(0.95,.05), na.rm=TRUE), NA))
MCAR_ul
bind_rows(complete_seq,MCARm, MCAR_ul)
bind_rows(c(complete_seq,MCARm, MCAR_ul))
bind_cols(c(complete_seq,MCARm, MCAR_ul))
bind_cols(c(t(complete_seq),t(MCARm), t(MCAR_ul)))
?bind_cols
bind_cols(list(complete_seq,MCARm,MCAR_ul))
complete_seq
MCARm
MCARm <- do.call(rbind, c(lapply(results_listMCAR[1:20], "mean"), NA))
MCARm
MCAR_ul <- do.call(rbind, c(lapply(results_listMCAR[1:20],quantile, probs=c(0.95,.05), na.rm=TRUE), NA))
bind_cols(list(complete_seq,MCARm,MCAR_ul))
MCARm
MCAR_ul
bind_cols(complete_seq,MCARm,MCAR_ul)
bind_cols(list(complete_seq,MCARm,MCAR_ul))
cbind(complete_seq,MCARm,MCAR_ul)
MCAR_dat <- cbind(complete_seq,MCARm,MCAR_ul) %>% as_tibble %>% mutate(type = "MCAR")
MCAR_dat
names(MCAR_dat) <- c("perc_complete", "rho", "upper", "lower", "type")
bridge_dat <- cbind(complete_seq,bridgem,bridge_ul) %>% as_tibble %>% mutate(type = "Bridged")
bridgem <- do.call(rbind, lapply(results_listBridge, "mean"), NA))
bridgem <- do.call(rbind, c(lapply(results_listBridge, "mean"), NA))
bridge_ul <- do.call(rbind, c(lapply(results_listBridge,quantile, probs=c(0.95,.05), na.rm=TRUE), NA))
bridgem
bridgem <- do.call(rbind, lapply(results_listBridge, "mean"))
bridge_ul <- do.call(rbind, lapply(results_listBridge,quantile, probs=c(0.95,.05), na.rm=TRUE))
bridgem
bridge_ul
bridge_dat <- cbind(complete_seq,bridgem,bridge_ul) %>% as_tibble %>% mutate(type = "Bridged")
names(bridge_dat) <- c("perc_complete", "rho", "upper", "lower", "type")
bridge_dat
bind_rows(MCAR_dat,bridge_dat)
?geom_ribbon
g1 <- ggplot(output, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, color=type)) + geom_point() + geom_line() + geom_ribbon()+theme_classic(base_size = 12) + xlab("Percent MCAR") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent)
g1
g1 <- ggplot(all_dat, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, color=type)) + geom_point() + geom_line() + geom_ribbon()+theme_classic(base_size = 12) + xlab("Percent MCAR") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent)
all_dat <- bind_rows(MCAR_dat,bridge_dat)
g1 <- ggplot(all_dat, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, color=type)) + geom_point() + geom_line() + geom_ribbon()+theme_classic(base_size = 12) + xlab("Percent MCAR") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent)
g1
(g1 <- ggplot(all_dat, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, color=type)) + geom_point() + geom_line() + geom_ribbon(alpha=.4)+theme_classic(base_size = 12) + xlab("Percent MCAR") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(all_dat, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, color=type)) + geom_ribbon(alpha=.4) + geom_point() + geom_line() +theme_classic(base_size = 12) + xlab("Percent MCAR") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(all_dat, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, group=type)) + geom_ribbon(alpha=.4) + geom_point() + geom_line() +theme_classic(base_size = 12) + xlab("Percent MCAR") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(all_dat, aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, group=type)) + geom_ribbon(alpha=.4) + geom_point() + geom_line() +
theme_classic(base_size = 12) + xlab("Percent complete") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(filter(all_dat,perc_complete > 0), aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, group=type)) + geom_ribbon(alpha=.4) + geom_point() + geom_line() +
theme_classic(base_size = 12) + xlab("Percent complete") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(filter(all_dat,perc_complete > 0), aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, group=type, color=type)) + geom_ribbon(alpha=.4) + geom_point() + geom_line() +
theme_classic(base_size = 12) + xlab("Percent complete") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(filter(all_dat,perc_complete > 0), aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, group=type, color=type)) +
geom_ribbon(alpha=3,colour=NA) + geom_point() + geom_line() +
theme_classic(base_size = 12) + xlab("Percent complete") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
(g1 <- ggplot(filter(all_dat,perc_complete > 0), aes(x=perc_complete, y=rho, ymax = upper, ymin=lower, group=type, color=type)) +
geom_ribbon(alpha=.3,colour=NA) + geom_point() + geom_line() +
theme_classic(base_size = 12) + xlab("Percent complete") +
ylab(TeX("Spearman $\\rho$ of $\\theta$ and $\\hat{\\theta}$")) +
scale_x_continuous(labels = scales::percent))
ggsave(file="MCAR_diagnostic.pdf", g1, width = 3.5, height = 3, units = "in" )
ggsave(file="MCAR_diagnostic.pdf", g1, width = 4.5, height = 4, units = "in" )
library(readr)
setwd("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander")
library(RSQLite)
library(dplyr)
library(dbplyr)
member_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/member_bills.csv")
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
committee_bills <- committee_bills %>% select(org_pac_FEC_id, Bill)
member_bills <- member_bills %>% select(mc_icpsrid, Bill)
member_bills$mc_icpsrid <- as.character(member_bills$mc_icpsrid)
member_bills$mc_icpsrid[member_bills$mc_icpsrid == "90901"] <- "AL8291"
icpsrids <- as.character(unique(member_bills$mc_icpsrid))
fecids <- as.character(unique(committee_bills$org_pac_FEC_id))
con = DBI::dbConnect(RSQLite::SQLite(), dbname="dime.sqlite3")
alltables = dbListTables(con, schema = T)
cand_db <-  tbl(con, "candDB")
donor_db <-  tbl(con, "donorDB")
contrib_db <-  tbl(con, "contribDB")
#cid_crosswalk <- contrib_db %>% filter(contributor_type == "C", !is.na(efec_comid_orig), efec_comid_orig != "") %>% select(efec_comid_orig, bonica_cid) %>% distinct()
rid_crosswalk <- cand_db %>% select(ICPSR2, Cand_ID) %>% filter(ICPSR2 %in% icpsrids) %>% distinct() %>% collect()
member_bills <- member_bills %>% left_join(rid_crosswalk, by=c("mc_icpsrid" = "ICPSR2"))
#cid_crosswalk <- cid_crosswalk %>% filter(efec_comid_orig %in% fecids) %>% distinct() %>% collect()
pacs00 <- read_delim("/Volumes/space_drive/CampaignFin00/pacs00.txt", delim = ",", quote = "|", col_names = F)
dyads <- member_bills %>% left_join(committee_bills)
%>% select(Cand_ID, org_pac_FEC_id) %>% distinct()
######## LOAD ALL THE CRP PAC DATA
pacs90 <- read_delim("/Volumes/space_drive/CampaignFin90/pacs90.txt", delim = ",", quote = "|", col_names = F) %>% mutate(X1 = case_when(is.na(X1) ~ 1990, TRUE ~ X1))
pacs92 <- read_delim("/Volumes/space_drive/CampaignFin92/pacs92.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1992, TRUE ~ X1))
pacs94 <- read_delim("/Volumes/space_drive/CampaignFin94/pacs94.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1994, TRUE ~ X1))
pacs96 <- read_delim("/Volumes/space_drive/CampaignFin96/pacs96.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1996, TRUE ~ X1))
pacs98 <- read_delim("/Volumes/space_drive/CampaignFin98/pacs98.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1998, TRUE ~ X1))
pacs00 <- read_delim("/Volumes/space_drive/CampaignFin00/pacs00.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2000, TRUE ~ X1))
pacs02 <- read_delim("/Volumes/space_drive/CampaignFin02/pacs02.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2002, TRUE ~ X1))
pacs04 <- read_delim("/Volumes/space_drive/CampaignFin04/pacs04.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2004, TRUE ~ X1))
pacs06 <- read_delim("/Volumes/space_drive/CampaignFin06/pacs06.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2006, TRUE ~ X1))
pacs08 <- read_delim("/Volumes/space_drive/CampaignFin08/pacs08.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2008, TRUE ~ X1))
pacs10 <- read_delim("/Volumes/space_drive/CampaignFin10/pacs10.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2010, TRUE ~ X1))
pacs12 <- read_delim("/Volumes/space_drive/CampaignFin12/pacs12.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2012, TRUE ~ X1))
pacs14 <- read_delim("/Volumes/space_drive/CampaignFin14/pacs14.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2014, TRUE ~ X1))
pacs <- bind_rows(pacs90, pacs92, pacs94, pacs96, pacs98, pacs00, pacs02, pacs04, pacs06, pacs08, pacs10, pacs12, pacs14)
pacs_subset <- pacs %>% filter(X3 %in% dyads$org_pac_FEC_id, X10 %in% dyads$Cand_ID)
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1) %>% summarise(total_contributions = sum(X5))
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year", "Total_contributions")
all_test <- dyads %>% left_join(year_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>% summarise(Total_contributions = sum(Total_contributions, na.rm = T)) %>% filter(!is.na(Year))
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
all_test_names <- all_test %>% left_join(select(committee_bills, org_name, org_pac_FEC_id, Bill))
complete_year_dyads <- all_test_names %>% group_by(mc_icpsrid, Bill, Year, org_name) %>% summarise(Total_contributions = sum(Total_contributions))
library(readr)
setwd("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander")
library(RSQLite)
library(dplyr)
library(dbplyr)
member_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/member_bills.csv")
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
committee_bills <- committee_bills %>% select(org_pac_FEC_id, Bill)
member_bills <- member_bills %>% select(mc_icpsrid, Bill)
member_bills$mc_icpsrid <- as.character(member_bills$mc_icpsrid)
member_bills$mc_icpsrid[member_bills$mc_icpsrid == "90901"] <- "AL8291"
icpsrids <- as.character(unique(member_bills$mc_icpsrid))
fecids <- as.character(unique(committee_bills$org_pac_FEC_id))
con = DBI::dbConnect(RSQLite::SQLite(), dbname="dime.sqlite3")
alltables = dbListTables(con, schema = T)
cand_db <-  tbl(con, "candDB")
donor_db <-  tbl(con, "donorDB")
contrib_db <-  tbl(con, "contribDB")
#cid_crosswalk <- contrib_db %>% filter(contributor_type == "C", !is.na(efec_comid_orig), efec_comid_orig != "") %>% select(efec_comid_orig, bonica_cid) %>% distinct()
rid_crosswalk <- cand_db %>% select(ICPSR2, Cand_ID) %>% filter(ICPSR2 %in% icpsrids) %>% distinct() %>% collect()
member_bills <- member_bills %>% left_join(rid_crosswalk, by=c("mc_icpsrid" = "ICPSR2"))
#cid_crosswalk <- cid_crosswalk %>% filter(efec_comid_orig %in% fecids) %>% distinct() %>% collect()
pacs00 <- read_delim("/Volumes/space_drive/CampaignFin00/pacs00.txt", delim = ",", quote = "|", col_names = F)
dyads <- member_bills %>% left_join(committee_bills)
%>% select(Cand_ID, org_pac_FEC_id) %>% distinct()
######## LOAD ALL THE CRP PAC DATA
pacs90 <- read_delim("/Volumes/space_drive/CampaignFin90/pacs90.txt", delim = ",", quote = "|", col_names = F) %>% mutate(X1 = case_when(is.na(X1) ~ 1990, TRUE ~ X1))
pacs92 <- read_delim("/Volumes/space_drive/CampaignFin92/pacs92.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1992, TRUE ~ X1))
pacs94 <- read_delim("/Volumes/space_drive/CampaignFin94/pacs94.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1994, TRUE ~ X1))
pacs96 <- read_delim("/Volumes/space_drive/CampaignFin96/pacs96.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1996, TRUE ~ X1))
pacs98 <- read_delim("/Volumes/space_drive/CampaignFin98/pacs98.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 1998, TRUE ~ X1))
pacs00 <- read_delim("/Volumes/space_drive/CampaignFin00/pacs00.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2000, TRUE ~ X1))
pacs02 <- read_delim("/Volumes/space_drive/CampaignFin02/pacs02.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2002, TRUE ~ X1))
pacs04 <- read_delim("/Volumes/space_drive/CampaignFin04/pacs04.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2004, TRUE ~ X1))
pacs06 <- read_delim("/Volumes/space_drive/CampaignFin06/pacs06.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2006, TRUE ~ X1))
pacs08 <- read_delim("/Volumes/space_drive/CampaignFin08/pacs08.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2008, TRUE ~ X1))
pacs10 <- read_delim("/Volumes/space_drive/CampaignFin10/pacs10.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2010, TRUE ~ X1))
pacs12 <- read_delim("/Volumes/space_drive/CampaignFin12/pacs12.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2012, TRUE ~ X1))
pacs14 <- read_delim("/Volumes/space_drive/CampaignFin14/pacs14.txt", delim = ",", quote = "|", col_names = F)%>% mutate(X1 = case_when(is.na(X1) ~ 2014, TRUE ~ X1))
pacs <- bind_rows(pacs90, pacs92, pacs94, pacs96, pacs98, pacs00, pacs02, pacs04, pacs06, pacs08, pacs10, pacs12, pacs14)
pacs_subset <- pacs %>% filter(X3 %in% dyads$org_pac_FEC_id, X10 %in% dyads$Cand_ID)
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1) %>% summarise(total_contributions = sum(X5))
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year", "Total_contributions")
all_test <- dyads %>% left_join(year_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>% summarise(Total_contributions = sum(Total_contributions, na.rm = T)) %>% filter(!is.na(Year))
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
all_test_names <- all_test %>% left_join(select(committee_bills, org_name, org_pac_FEC_id, Bill))
complete_year_dyads <- all_test_names %>% group_by(mc_icpsrid, Bill, Year, org_name) %>% summarise(Total_contributions = sum(Total_contributions))
complete_year_dyads
bill_frames <- complete_year_dyads %>% split(Bill)
source('~/Dropbox/Projects/RickRobZander/PACMunge.R', echo=TRUE)
bill_frames <- complete_year_dyads %>% split(.$Bill)
bill_frames
all_test_names
filter(all_test_names, org_pac_FEC_id == "C30000848")
filter(all_test_names, org_pac_FEC_id == "C70000492")
filter(all_test_names, org_pac_FEC_id == "C00003251")
filter(all_test_names, org_pac_FEC_id == "C70000369")
typeof(bill_frames)
names(bill_frames)
nms <- names(bill_frames)
for( i in 1:length(bill_frames))
write.csv(bill_frames[i],paste0(nms[i],'.csv'))
names(bill_frames[1])
names(bill_frames[[1]])
nms <- names(bill_frames)
for( i in 1:length(bill_frames))
write.csv(bill_frames[[i]],paste0(nms[i],'.csv'))
pacs
filter(pacs, X8 == "24A")
pacs_subset <- pacs %>% filter(X3 %in% dyads$org_pac_FEC_id, X10 %in% dyads$Cand_ID, X9 == "D")
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1) %>% summarise(total_contributions = sum(X5))
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year", "Total_contributions")
all_test <- dyads %>% left_join(year_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>% summarise(Total_contributions = sum(Total_contributions, na.rm = T)) %>% filter(!is.na(Year))
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
all_test_names <- all_test %>% left_join(select(committee_bills, org_name, org_pac_FEC_id, Bill))
complete_year_dyads <- all_test_names %>% group_by(mc_icpsrid, Bill, Year, org_name) %>% summarise(Total_contributions = sum(Total_contributions))
bill_frames <- complete_year_dyads %>% split(.$Bill)
writebill_frames$Bankruptcy
nms <- names(bill_frames)
for( i in 1:length(bill_frames))
write.csv(bill_frames[[i]],paste0(nms[i],'.csv'))
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1, X8) %>% summarise(expenditure = sum(X5))
year_dyads
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year","Transaction_Type" "Total_contributions")
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year","Transaction_Type", "Total_contributions")
year_dyads
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year","Transaction_Type", "Expenditure")
year_dyads
library(tidyr)
?spread
spread(year_dyads, Transaction_Type, Expenditure)
spread(year_dyads, key = Transaction_Type, value = Expenditure)
year_dyads
year_dyads <- ungroup(year_dyads)
spread(year_dyads, key = Transaction_Type, value = Expenditure)
spread_dyads <- spread(year_dyads, key = Transaction_Type, value = Expenditure)
summary(spread_dyads)
########################
pacs_subset <- pacs %>% filter(X3 %in% dyads$org_pac_FEC_id, X10 %in% dyads$Cand_ID, X9 == "I")
pacs_subset
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1, X8) %>% summarise(expenditure = sum(X5))
year_dyads
year_dyads <- ungroup(year_dyads)
library(tidyr)
spread_dyads <- spread(year_dyads, key = Transaction_Type, value = Expenditure)
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year","Transaction_Type", "Expenditure")
year_dyads <- ungroup(year_dyads)
library(tidyr)
spread_dyads <- spread(year_dyads, key = Transaction_Type, value = Expenditure)
spread_dyads
summary(spread_dyads)
names(spread_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year", "IE_against", "IE_for", "comm_cost_for", "honorarium_to", "comm_cost_against" )
spread_dyads
all_test <- dyads %>% left_join(spread_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>%
summarise(IE_against = sum(IE_against, na.rm = T), IE_for = sum(IE_for, na.rm = T),comm_cost_for = sum(comm_cost_for, na.rm = T), comm_cost_against = sum(comm_cost_against, na.rm = T), honorarium_to = sum(honorarium_to, na.rm = T)) %>% filter(!is.na(Year))
all_test
summary(all_test)
filter(all_test, IE_against > 10000000)
spread_dyads %>% filter(honorarium_to > 0)
all_test <- dyads %>% left_join(spread_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>% distinct() %>%
summarise(IE_against = sum(IE_against, na.rm = T), IE_for = sum(IE_for, na.rm = T),comm_cost_for = sum(comm_cost_for, na.rm = T), comm_cost_against = sum(comm_cost_against, na.rm = T), honorarium_to = sum(honorarium_to, na.rm = T)) %>% filter(!is.na(Year))
summary(all_test)
pacs <- bind_rows(pacs90, pacs92, pacs94, pacs96, pacs98, pacs00, pacs02, pacs04, pacs06, pacs08, pacs10, pacs12, pacs14)
pacs_subset <- pacs %>% filter(X3 %in% dyads$org_pac_FEC_id, X10 %in% dyads$Cand_ID, X9 == "D")
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1) %>% summarise(total_contributions = sum(X5))
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year", "Total_contributions")
all_test <- dyads %>% left_join(year_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>% distinct() %>% summarise(Total_contributions = sum(Total_contributions, na.rm = T)) %>% filter(!is.na(Year))
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
all_test_names <- all_test %>% left_join(select(committee_bills, org_name, org_pac_FEC_id, Bill))
complete_year_dyads <- all_test_names %>% group_by(mc_icpsrid, Bill, Year, org_name) %>% summarise(Total_contributions = sum(Total_contributions))
bill_frames <- complete_year_dyads %>% split(.$Bill)
?paste0
nms <- names(bill_frames)
for( i in 1:length(bill_frames))
write.csv(bill_frames[[i]],paste0("Direct",nms[i],'.csv'))
all_test_names <- all_test %>% left_join(select(committee_bills, org_name, org_pac_FEC_id, Bill))
complete_year_dyads <- all_test_names %>% group_by(mc_icpsrid, Bill, Year, org_name) %>%
summarise(IE_against = sum(IE_against, na.rm = T), IE_for = sum(IE_for, na.rm = T),comm_cost_for = sum(comm_cost_for, na.rm = T), comm_cost_against = sum(comm_cost_against, na.rm = T), honorarium_to = sum(honorarium_to, na.rm = T)) %>% filter(!is.na(Year))
all_test_names
pacs_subset <- pacs %>% filter(X3 %in% dyads$org_pac_FEC_id, X10 %in% dyads$Cand_ID, X9 == "I")
year_dyads  <- pacs_subset%>% group_by(X3, X10, X1, X8) %>% summarise(expenditure = sum(X5))
names(year_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year","Transaction_Type", "Expenditure")
year_dyads <- ungroup(year_dyads)
library(tidyr)
spread_dyads <- spread(year_dyads, key = Transaction_Type, value = Expenditure)
names(spread_dyads) <- c("org_pac_FEC_id", "Cand_ID", "Year", "IE_against", "IE_for", "comm_cost_for", "honorarium_to", "comm_cost_against" )
all_test <- dyads %>% left_join(spread_dyads) %>% group_by(mc_icpsrid, Bill, org_pac_FEC_id, Year) %>% distinct() %>%
summarise(IE_against = sum(IE_against, na.rm = T), IE_for = sum(IE_for, na.rm = T),comm_cost_for = sum(comm_cost_for, na.rm = T), comm_cost_against = sum(comm_cost_against, na.rm = T), honorarium_to = sum(honorarium_to, na.rm = T)) %>% filter(!is.na(Year))
committee_bills <- read_csv("/Users/alexanderfurnas/Dropbox/Projects/RickRobZander/committee_bills.csv")
all_test
all_test_names <- all_test %>% left_join(select(committee_bills, org_name, org_pac_FEC_id, Bill))
all_test_names
complete_year_dyads <- all_test_names %>% group_by(mc_icpsrid, Bill, Year, org_name) %>%
summarise(IE_against = sum(IE_against, na.rm = T), IE_for = sum(IE_for, na.rm = T),comm_cost_for = sum(comm_cost_for, na.rm = T), comm_cost_against = sum(comm_cost_against, na.rm = T), honorarium_to = sum(honorarium_to, na.rm = T)) %>% filter(!is.na(Year))
complete_year_dyads
bill_frames <- complete_year_dyads %>% split(.$Bill)
nms <- names(bill_frames)
for( i in 1:length(bill_frames))
write.csv(bill_frames[[i]],paste0("Indirect",nms[i],'.csv'))
contrib_db
cand_db
cand_use <- cand_db %>% select(cycle, FEC_ID, ICPSR2, bonica_rid, name, party, state, seat, district,recipient_cfscore,
contributor_cfscore,  recipient_cfscore_dyn, irt_cfscore,dwnom1,dwdime, nitemized, non_party_ind_exp_for,
non_party_ind_exp_against, ind_exp_for, ind_exp_against, comm_cost_for, comm_cost_against,
party_coord_exp, party_ind_exp_against, total_receipts , total_indiv_contrib, total_pac_contribs,
gen_elect_pct, district_partisanship,district_pres_vs)
cand_use <- cand_db %>% select(cycle, FEC_ID, ICPSR2, bonica_rid, name, party, state, seat, district,recipient_cfscore,
contributor_cfscore,  recipient_cfscore_dyn, irt_cfscore,dwnom1,dwdime, nitemized, non_party_ind_exp_for,
non_party_ind_exp_against, ind_exp_for, ind_exp_against, comm_cost_for, comm_cost_against,
party_coord_exp, party_ind_exp_against, total_receipts , total_indiv_contrib, total_pac_contribs,
gen_elect_pct, district_partisanship,district_pres_vs) %>% filter(ICPSR2 %in% icpsrids) %>% distinct()
cand_use <- cand_db %>% select(cycle, FEC_ID, ICPSR2, bonica_rid, name, party, state, seat, district,recipient_cfscore,
contributor_cfscore,  recipient_cfscore_dyn, irt_cfscore,dwnom1,dwdime, unitemized, non_party_ind_exp_for,
non_party_ind_exp_against, ind_exp_for, ind_exp_against, comm_cost_for, comm_cost_against,
party_coord_exp, party_ind_exp_against, total_receipts , total_indiv_contrib, total_pac_contribs,
gen_elect_pct, district_partisanship,district_pres_vs) %>% filter(ICPSR2 %in% icpsrids) %>% distinct()
cand_use
cand_use <- cand_db %>% select(cycle, FEC_ID, ICPSR2, bonica_rid, name, party, state, seat, district,recipient_cfscore,
recipient_cfscore_dyn, irt_cfscore,dwnom1,dwdime, unitemized, non_party_ind_exp_for,
non_party_ind_exp_against, ind_exp_for, ind_exp_against, comm_cost_for, comm_cost_against,
party_coord_exp, party_ind_exp_against, total_receipts , total_indiv_contrib, total_pac_contribs,
gen_elect_pct, district_partisanship,district_pres_vs) %>% filter(ICPSR2 %in% icpsrids) %>% distinct()
cand_use <- cand_db %>% select(cycle, FEC_ID, ICPSR2, bonica_rid, name, party, state, seat, district,recipient_cfscore,
recipient_cfscore_dyn, irt_cfscore,dwnom1,dwdime, unitemized, non_party_ind_exp_for,
non_party_ind_exp_against, ind_exp_for, ind_exp_against, comm_cost_for, comm_cost_against,
party_coord_exp, party_ind_exp_against, total_receipts , total_indiv_contrib, total_pac_contribs,
gen_elect_pct, district_partisanship,district_pres_vs) %>% filter(ICPSR2 %in% icpsrids) %>% distinct() %>% collect()
cand_use
summary(cand_use)
cand_use$gen_elect_pct
as.numeric(cand_use$gen_elect_pct)
table(cand_use$cycle,as.numeric(cand_use$gen_elect_pct))
View(table(cand_use$cycle,as.numeric(cand_use$gen_elect_pct)))
write_csv(cand_use, "Candidate_vars.csv")
summary(cand_use$gen_elect_pct)
summary(as.numeric(cand_use$gen_elect_pct))
summary(as.numeric(filter(cand_use, cycle > 2000)$gen_elect_pct))
as.numeric(" 34")
cand_use$gen_elect_pct <- as.numeric(cand_use$gen_elect_pct)
write_csv(cand_use, "Candidate_vars.csv")
library(devtools)
rm(list=ls())
character()
is.null(character())
is.na(character())
length(character())
length("4")
strsplit("VA-4", "-")
dists <- c("VA-4", "VA-5")
strsplit(" dists", "-")
strsplit(dists, "-")
do.call(rbind,strsplit(dists, "-"))
as_table(do.call(rbind,strsplit(dists, "-")))
as.data.frame(do.call(rbind,strsplit(dists, "-")))
?gsub
substr("VA4", 3,4)
substr("VA4", 3,5)
substr(dists, 3,4)
stdz_district <- function(full_district = character(), state, district, denote_sen = "0", denote_al = "1", sep = "-", old_sep = NA, sep_loc = NA){
if (length(full_district) != 0) {
if (!is.na(old_sep)){
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, old_sep))))
names(district_frame) <- c("state", "district")
} else if (is.na(sep_loc)) {
states <- substr(full_district, 1,sep_loc)
districts <- substr(full_district, sep_loc+1,5)
district_frame <- as.data.frame(cbind(states, districts))
names(district_frame) <- c("state", "district")
} else {
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, sep))))
names(district_frame) <- c("state", "district")
}
}
district_frame <- as.data.frame(cbind(state, district))
names(district_frame) <- c("state", "district")
return(district_frame)
}
stdz_district <- function(full_district = character(), state, district, denote_sen = "0", denote_al = "1", sep = "-", old_sep = NA, sep_loc = NA){
if (length(full_district) != 0) {
if (!is.na(old_sep)){
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, old_sep)))
names(district_frame) <- c("state", "district")
} else if (is.na(sep_loc)) {
states <- substr(full_district, 1,sep_loc)
districts <- substr(full_district, sep_loc+1,5)
district_frame <- as.data.frame(cbind(states, districts))
names(district_frame) <- c("state", "district")
} else {
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, sep)))
names(district_frame) <- c("state", "district")
}
}
district_frame <- as.data.frame(cbind(state, district))
names(district_frame) <- c("state", "district")
return(district_frame)
}
stdz_district(dists)
stdz_district <- function(full_district = character(), state, district, denote_sen = "0", denote_al = "1", sep = "-", old_sep = NA, sep_loc = NA){
if (length(full_district) != 0) {
if (!is.na(old_sep)){
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, old_sep)))
names(district_frame) <- c("state", "district")
} else if (is.na(sep_loc)) {
states <- substr(full_district, 1,sep_loc)
districts <- substr(full_district, sep_loc+1,5)
district_frame <- as.data.frame(cbind(states, districts))
names(district_frame) <- c("state", "district")
} else {
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, sep)))
names(district_frame) <- c("state", "district")
}
} else {
district_frame <- as.data.frame(cbind(state, district))
names(district_frame) <- c("state", "district")
}
return(district_frame)
}
stdz_district(dists)
stdz_district <- function(full_district = character(), state, district, denote_sen = "0", denote_al = "1", sep = "-", old_sep = NA, sep_loc = NA){
if (length(full_district) != 0) {
if (!is.na(old_sep)){
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, old_sep)))
names(district_frame) <- c("state", "district")
} else if (!is.na(sep_loc)) {
states <- substr(full_district, 1,sep_loc)
districts <- substr(full_district, sep_loc+1,5)
district_frame <- as.data.frame(cbind(states, districts))
names(district_frame) <- c("state", "district")
} else {
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, sep)))
names(district_frame) <- c("state", "district")
}
} else {
district_frame <- as.data.frame(cbind(state, district))
names(district_frame) <- c("state", "district")
}
return(district_frame)
}
stdz_district(dists)
install.packages("stringr")
install.packages("stringr")
library(stringr)
?str_pad
?gsub
gsub("-", "---", dists)
stdz_district <- function(full_district = character(), state, district, denote_sen = "00", denote_al = "01", sep = "-", old_sep = NA, sep_loc = NA){
if (length(full_district) != 0) {
if (!is.na(old_sep)){
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, old_sep)))
names(district_frame) <- c("state", "district")
} else if (!is.na(sep_loc)) {
states <- substr(full_district, 1,sep_loc)
districts <- substr(full_district, sep_loc+1,5)
district_frame <- as.data.frame(cbind(states, districts))
names(district_frame) <- c("state", "district")
} else {
district_frame <- as.data.frame(do.call(rbind,strsplit(full_district, sep)))
names(district_frame) <- c("state", "district")
}
} else {
district_frame <- as.data.frame(cbind(state, district))
names(district_frame) <- c("state", "district")
}
district_frame$district <- gsub("al", denote_al, district_frame$district)
district_frame$district <- gsub("AL", denote_al, district_frame$district)
district_frame$district <- str_pad(district_frame$district, 2, side = "left", pad = 0)
std_districts <- paste(district_frame$state,district_frame$district, sep = sep )
return(std_districts)
}
stdz_district(dists)
devtools::document()
setwd(/Users/alexanderfurnas/Dropbox/Projects/congressTools/)
setwd("/Users/alexanderfurnas/Dropbox/Projects/congressTools/")
devtools::document()
devtools::document()
devtools::document()
library(roxygen2)
devtools::document()
